[{"categories":["tools"],"contents":" Exit 退出: c-x c-c 挂起: c-z Movement: 上: c-p 下: c-n 前: c-f 后: c-b 前-单词: m-f 后-单词: m-b 文章开始: m-\u0026lt; 文章末尾: m-\u0026gt; 上-滚屏: c-v 下-滚屏: m-v Edit: new/save 新建: c-x c-f 保存: c-x c-s 只读: c-x c-q undo/redo 撤销上一条指令: c-/ 重做: c-f + undo cut/paste 删-字符: c-d 删-单词: m-d 删-行: c-k 删-段落: m-k 光标后增加一行: c-o 标记: c-space 剪切: c-w 复制: m-w 粘贴: c-y 粘贴-上一个: m-y (需要先执行c-y) 行号-显示: m-x global-display-line-numbers-mode 行号-跳转: m-g g buffer 关闭: c-x k window 关闭-当前: c-x 0 关闭-其它: c-x 1 分屏-上下: c-x 2 分屏-左右: c-x 3 跳转: c-x o insert and replace 插入/覆盖模式切换: m-x overwrite-mode search 向后搜索/继续向后搜索: c-s 向前搜索/继续向前搜索: c-r multiline edit 多行指定列插入前缀字符串 移动到第一行要插入前缀的列 设置标记开始: c-space 移动到最后一行 设置模式: m-x string-rectangle 输入要插入的字符 多行增加自增数字前缀 移动到第一行要插入数字前缀的列 设置标记开始: c-space 移动到最后一列 设置模式: m-x rectangle-number-lines 多行指定列剪切字符串(可用于yank粘贴, 或者使用delete-rectangle删除) 移动到第一行要删除的起始列 设置标记开始: c-space 移动到最后一行要删除的列的后一列 设置模式: m-x kill-rectangle 框选模式删除 设置框选标记: c-x space 移动光标进行框选 删除被框选的列: delete/backspace/c-w 框选模式替换 设置框选标记: c-x space 移动光标进行框选 设置替换模式: m-x replace-rectangle 输入要替换的字符串 框选模式插入 设置框选标记: c-x space 移动光标进行框选 设置插入模式: m-x string-rectangle 输入要插入的字符串 Org mode fold/unfold 展开: tab 展开-全局: s-tab movement 下一个标题: c-c c-n 下一个同级标题: c-c c-f 上一个标题: c-c c-p 上一个同级标题: c-c c-b 回到上层标题: c-c c-u 视图 只显示当前子树: c-c n s 显示全部子树: c-c n w reference Overwrite-mode Edit Column Text, Rectangle Commands GNU Emacs Reference Card Org-mode 简明手册 Emacs Cheat Sheet ","date":"May 05","permalink":"https://vedbaek.github.io/posts/tools/try_emacs2/","tags":["tools"],"title":"Surrive in emacs"},{"categories":["tools"],"contents":" 怎么退出VIM 先按ESC键 然后英文键盘下输入:q!(注意冒号也是指令的一部分) ","date":"Apr 02","permalink":"https://vedbaek.github.io/posts/tools/try_vim/","tags":["tools"],"title":"VIM配置"},{"categories":["tools"],"contents":" 下载安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # download wget https://github.com/Dreamacro/clash/releases/download/v1.9.0/clash-linux-amd64-v1.9.0.gz # extract gunzip clash-linux-amd64-v1.9.0.gz cd clash-linux-amd64-v1.9.0 # download config curl https://update.glados-config.com/clash/137440/9039f80/13763/glados.yaml \u0026gt; config.yaml # run clash-linux-amd64-v1.9.0 -d ./ # local clash config http://clash.razord.top/#/proxies http://127.0.0.1:9090 代理配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # 全局代理 $ vi /etc/profile export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890 export no_proxy=\u0026#34;localhost, 127.0.0.1, ::1, 192.168.*.*, 10.*.*.*, *.local, *.taobao.com, *.xiaohongshu.com\u0026#34; # 应用代理配置 $ source /etc/profile # 取消终端代理配置 unset http_proxy https_proxy all_proxy # git代理 git config --global http.proxy http://127.0.0.1:7890 git config --global https.proxy https://127.0.0.1:7890 # 取消git代理 git config --global --unset http.proxy git config --global --unset https.proxy 白名单（没生效） 1 2 3 4 $ vi config.yaml cfw-bypass: - \u0026#39;*.taobao.com\u0026#39; - \u0026#39;*.xiaohongshu.com\u0026#39; 添加启动服务 1 2 3 4 5 6 7 8 9 10 11 12 13 $ sudo vi /etc/systemd/system/clashd.service [Unit] Description=Clash service After=network.target [Service] Type=simple ExecStart=/usr/local/bin/clash -f /opt/clash/config.yaml -d /opt/clash/config [Install] WantedBy=multi-user.target 服务控制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 重新加载服务 sudo systemctl daemon-reload # 开机启动 sudo systemctl enable clashd # 启动服务 sudo systemctl start clashd # 关闭服务 sudo systemctl status clashd # 查看服务日志 # -f --follow 实时显示最新日志 # -n --lines显示最近的n条日志 # -u --unit 指定要显示的服务 journalctl -u clashd -f -n 10 启动服务失败出现Permission denied问题 错误提示 Failed at step EXEC spawning \u0026hellip; Permission denied\n1 2 # 修改selinux模式为Permissive sudo setenforce Permissive 查看自己的ip信息 1 2 curl cip.cc curl ipinfo.io 参考 https://glados.one/console/clash https://github.com/Dreamacro/clash https://github.com/Dreamacro/clash/releases https://curl.se/docs/manual.html ","date":"Mar 02","permalink":"https://vedbaek.github.io/posts/tools/try_clash/","tags":["tools"],"title":"Clash配置"},{"categories":["tools"],"contents":" gitbook常用配置 安装gitbook 1. 安装nodejs 1 2 3 4 5 # for fedora sudo dnf install nodejs -y # for mac brew install nodejs 2. 安装gitbook-cli 1 2 3 4 5 6 7 8 # 使用淘宝更新源 sudo npm config set registry=http://registry.npm.taobao.org -g # 或者使用腾讯更新源 npm config set registry http://mirrors.cloud.tencent.com/npm # 安装 sudo npm install -g gitbook-cli 3. 查看gitbook版本并安装gitbook 1 gitbook -V nodejs版本太新导致的问题 1 2 3 4 5 6 7 8 9 10 gitbook -V CLI version: 2.3.2 Installing GitBook 3.2.3 /usr/local/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:287 if (cb) cb.apply(this, arguments) ^ TypeError: cb.apply is not a function at /usr/local/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:287:18 at FSReqCallback.oncomplete (fs.js:184:5) 安装旧版本nodejs, 重新安装gitbook 1. 在已经安装nodejs的前提下, 安装n 1 sudo npm install -g n 2. 使用n安装10.24.1版本的nodejs 1 sudo n 10.24.1 3. 再次尝试安装gitbook 1 2 sudo npm config set registry=http://registry.npm.taobao.org -g gitbook -V gitbook使用 创建书籍 1 2 mkdir mybook \u0026amp;\u0026amp; cd mybook gitbook init 预览书籍 1 2 # 预览并构建 gitbook serve 构建书籍 1 gitbook build 书籍导出 1 2 3 gitbook pdf ./ ./mybook.pdf gitbook epub ./ ./mybook.epub gitbook mobi ./ ./mybook.mobi 通用配置 1 2 3 4 5 6 7 8 9 \u0026#34;title\u0026#34;: \u0026#34;book标题\u0026#34;, \u0026#34;author\u0026#34;:\u0026#34;book作者\u0026#34;, \u0026#34;description\u0026#34; : \u0026#34;book描述\u0026#34;, \u0026#34;language\u0026#34; : \u0026#34;zh-hans\u0026#34;, \u0026#34;links\u0026#34; : { \u0026#34;sidebar\u0026#34; : { \u0026#34;Home\u0026#34; : \u0026#34;https://www.侧边栏链接.com\u0026#34; } } 插件 代码区插件，显示行号和复制功能 根目录创建book.json 写入以下内容 执行gitbook install安装 1 { \u0026#34;plugins\u0026#34;:[\u0026#34;code\u0026#34;] } 加-号禁用插件 1 { \u0026#34;plugins\u0026#34;:[\u0026#34;-code\u0026#34;] } 回到顶部 1 { \u0026#34;plugins\u0026#34;:[\u0026#34;back-to-top-button\u0026#34;] } 侧边导航栏宽度可调节插件 1 { \u0026#34;plugins\u0026#34;:[\u0026#34;splitter\u0026#34;] } 支持emoji表情 1 { \u0026#34;plugins\u0026#34;:[\u0026#34;advanced-emoji\u0026#34;] } 导航目录折叠，需要目录也有链接存在才能生效 1 { \u0026#34;plugins\u0026#34;:[\u0026#34;chapter-fold\u0026#34;] } 参考： 1 2 3 4 5 6 7 # Summary * [Introduction](README.md) * [chapter1](chapter1.md) * [sub chapter1](sub_chapter1.md) * [page1](page1.md) * [page1](page1.md) 另外一个目录折叠插件 1 { \u0026#34;plugins\u0026#34;:[\u0026#34;expandable-chapters-small\u0026#34;] } 高级搜索search-pro，需要禁用默认的search和lunr插件 1 2 3 4 5 6 7 { \u0026#34;plugins\u0026#34;: [ \u0026#34;-lunr\u0026#34;, \u0026#34;-search\u0026#34;, \u0026#34;search-pro\u0026#34; ] } 隐藏元素，比如Published with GitBook按钮 1 2 3 4 5 6 7 8 9 10 { \u0026#34;plugins\u0026#34;:[ \u0026#34;hide-element\u0026#34; ], \u0026#34;pluginsConfig\u0026#34;:{ \u0026#34;hide-element\u0026#34;:{ \u0026#34;elements\u0026#34;: [\u0026#34;.gitbook-link\u0026#34;] } } } 参考 [1] https://nodejs.org/en/download/releases/\n[2] GitBook插件整理 https://www.jianshu.com/p/427b8bb066e6\n","date":"Feb 08","permalink":"https://vedbaek.github.io/posts/tools/try_gitbook/","tags":["tools"],"title":"GitBook配置"},{"categories":["tools"],"contents":" ohmyzsh 安装p10k主题 1. 下载仓库 1 git clone --depth=1 git@github.com:romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k 2. 设置主题 1 2 $ vi ~/.zshrc ZSH_THEME=\u0026#34;powerlevel10k/powerlevel10k\u0026#34; 3. 重新加载配置生效 1 $ source ~/.zshrc 4. 加载完配置后默认会自动执行一次个性配置引导 1 2 # 手动执行引导 $ p10k configure 推荐字体安装 nerd https://github.com/ryanoasis/nerd-fonts 1 2 git clone --depth=1 git@github.com:ryanoasis/nerd-fonts.git ./install 参考 powerlevel10k\n","date":"Feb 08","permalink":"https://vedbaek.github.io/posts/tools/try_p10k/","tags":["tools"],"title":"ohmyzsh安装powerlevel10k主题"},{"categories":["tools"],"contents":" Install 1 2 3 4 5 # for MacOS brew install hugo # for Fedora dnf install hugo latest release https://github.com/gohugoio/hugo/releases 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # download wget https://github.com/gohugoio/hugo/releases/download/v0.93.2/hugo_extended_0.93.2_Linux-64bit.tar.gz # 解压 tar -zxvf hugo_extended_0.93.2_Linux-64bit.tar.gz # 创建软连接 ln -s /Users/Root/Documents/app/hugo0.93.2/hugo /usr/local/bin/hugo # 确认软连接 which hugo # 查看版本 hugo version Theme 1 2 3 4 5 6 # try hogo-book theme git submodule add git@github.com:alex-shpak/hugo-book themes/hugo-book cp -R themes/hugo-book/exampleSite/content . # run with -D draft enabled, --theme theme specified, -p port specified hugo server --minify -D --theme hugo-book -p 1314 new site 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # init a new site hugo new site myblog # add a theme git submodule add git@github.com:WingLim/hugo-tania themes/hugo-tania # update the theme to config.toml theme = \u0026#34;hugo-tania\u0026#34; # run hugo server --minify -D # first page hugo new posts/my-first-post.md # about page hugo new about.md katex 1 Inline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $ Inline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\n1 2 3 Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ Block math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nMarkup Header 1 Markup Header 2 Markup Header 3 Markup Header 4 Markup Header 5 Markup Header 6 参考 https://www.andbible.com/tags/hugo/ ","date":"Jan 12","permalink":"https://vedbaek.github.io/posts/tools/try_hugo/","tags":["hugo"],"title":"Hugo博客配置"},{"categories":["tools"],"contents":" 下载仓库 1 git clone git@github.com:.../blog.git 配置默认编辑器为vim 1 2 3 4 5 6 7 git config --global core.editor vim # --edit 编辑配置 git config -e # 编辑全局配置 git config --global -e 配置保存帐号密码 1 git config --global credential.helper store 显示当前仓库改动状态 1 git status 改动完成后暂存文件（暂存了才能commit，命令行操作注意路径，git status会显示路径） 1 git add README.md 一个一个add嫌麻烦，可以一次性全add进去 1 2 3 4 5 6 7 8 # add modified \u0026amp; new file git add . # --update 仅add更新的文件，不会add新文件（untracked files） git add -u # add all changes, modified + untracked + deleted git add -A 全add可能会添加到不想加的文件，可以使用.gitignore文件来排除，然后在.gitignore文件中添加排除项 1 touch .gitignore 命令行下其实有交互式的add操作 1 git add -i add的其它替代方案 使用vscode，全程可视化操作，全平台都有安装包 提交代码（这么敲会进入vim编辑界面，编辑好退出就可以了） 1 git commit 提交代码2（-m参数带上了日志信息，直接就提交了） 1 git commit -m \u0026#34;一些日志...\u0026#34; 更新代码 1 git pull --rebase 上传代码（注意上传前要先更新） 1 2 3 4 5 # 向默认关联的远程分支推送 git push # 向指定远程分支推送 git push -u origin/master 检出其它分支 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 git checkout -b new_local_branch_name origin/remote_branch_name # 查看本地分支 local branch git branch # 查看本地远程分支 remote-tracking branch git branch -r # 查看本地所有分支 local branch \u0026amp; remote-tracking branch git branch -a # 重命名本地分支 git branch -m oldname newname # 删除本地分支 git branch -d local_branch_name # 强制删除本地分支 git branch -D local_branch_name # 查看本地分支upstream git branch -vv # 设置push/pull默认关联分支 --set-upstream-to git branch -u origin/master 查看日志 1 2 3 4 5 6 7 8 9 10 11 # 显示日志 git log # 最近2个日志 git log -2 # 全部修改 git log -p # 日志统计 git log --stat --summary 设置别名 1 2 3 4 5 # git log -\u0026gt; git lg git config --global alias.lg \u0026#34;log --graph --abbrev-commit --decorate --format=format:\u0026#39;%C(bold blue)%h%C(reset) %C(bold green)%as%C(reset) %C(white)%s%C(reset) %C(dim white)%an\u0026lt;%ae\u0026gt;%C(reset)%C(bold yellow)%d%C(reset)\u0026#39; --all\u0026#34; # git status -\u0026gt; git st git config --global alias.st status remote远程地址 1 2 3 4 5 6 7 8 # 查看所有远程地址 git remote -v # 修改远程地址 git remote set-url origin git@github.com:.../blog.git # 重命名 git remote rename origin origin2 删除未被托管的新增文件 1 2 # -d 清理untracked目录和文件，-f 强制清理 git clean -df 垃圾回收 1 git gc git branch像less一样显示问题 1 git config --global paper.branch false 子模块submodule # 添加子模块到指定目录 git submodule add git@github.com:alex-shpak/hugo-book themes/hugo-book # 初始化，更新 git submodule update --init --recursive git submodule init git submodule update # 更新所有子模块 git submodule foreach git pull 搜索历史记录脚本 1 2 3 4 5 6 7 8 9 search_str=\u0026#39;some messages for search\u0026#39; search_path=\u0026#39;./filename_or_pathname\u0026#39; commits=$(git log --pretty=format:\u0026#34;%h\u0026#34;) while IFS= read -r commit do echo $commit git show $commit | grep \u0026#34;$search_str\u0026#34; done \u0026lt;\u0026lt;\u0026lt; $commits 参考 [1] git add https://git-scm.com/docs/git-add [2] git log https://git-scm.com/docs/git-log\n","date":"May 23","permalink":"https://vedbaek.github.io/posts/tools/try_git/","tags":["tools"],"title":"git简单上手"},{"categories":null,"contents":"","date":"Jan 01","permalink":"https://vedbaek.github.io/articles/","tags":null,"title":"Articles"}]